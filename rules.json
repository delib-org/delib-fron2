//first
{"rules":{".read":"auth !== null",".write":"auth !== null","groups":{"$group_id":{"owner":{".write":"data.val() == auth.uid"}}},"users":{".read":"auth !== null",".write":false,"$user_id":{".write":"$user_id === auth.uid"}}}}

//prevet other users from writing to other users
{
  "rules":{
    "questions":{
      ".read":"true",
      "$question":{
        ".write":"(auth.uid !== null) && (auth.uid === data.child('owner').val())",
        "options":{
          "$option":{
            ".write":"(auth.uid !== null) && (auth.uid === data.child('ownerUid').val())"
          }
        }
      }
    },
    "groups":{
      ".read":"true",
      "$group":{
        ".write":"(auth.uid !== null) && (auth.uid === data.child('owner').val())"
      }
    },
    "users":{
      "$uid":{
        ".write": "$uid === auth.uid",
        ".read": "$uid === auth.uid"
      }
    }
  }
}

//second
{
  "rules":{
    "questions":{
      ".read":"true",
      "$question":{
        ".write":"(auth.uid !== null) && (auth.uid === data.child('owner').val())",
        "options":{
          "$option":{
            ".write":"(auth.uid !== null) && (auth.uid === data.child('ownerUid').val())",
            ".read":"true"
          }
        }
      }
    },
    "groups":{
      ".read":"true",
      "$group":{
        ".write":"(auth.uid !== null) && (auth.uid === data.child('owner').val())"
      }
    },
    "users":{
      "$uid":{
        ".write": "$uid === auth.uid",
        ".read": "$uid === auth.uid"
      }
    }
  }
}


//before indexOn
{
  "rules": {
    ".read": "auth !== null",
    ".write": "auth !== null",
    "groups": {
      "$group_id": {
        "owner": {
          ".write": "data.val() == auth.uid"
        }
      }
    },
    "users": {
      ".read": "auth !== null",
      ".write": false,
      "$user_id": {
        ".write": "$user_id === auth.uid"
      }
    }
  }
}

//with indexOn
{
  "rules": {
    ".read": "auth !== null",
    ".write": "auth !== null",
    "groups": {
      "$group_id": {
        "owner": {
          ".write": "data.val() == auth.uid"
        }
      }
    },
    "users": {
      ".read": "auth !== null",
      ".write": false,
      "$user_id": {
        ".write": "$user_id === auth.uid"
      }
    },
    "chats": {
      "$chats":{
        "messages":{
          ".indexOn": ["dateAdded"]
        }
      }
    }
  }
}
//indexOn to topics and groups

{
  "rules": {
    ".read": "auth !== null",
    ".write": "auth !== null",
    "groups": {
      ".indexOn":["type"],
      "$group_id": {
        "owner": {
          ".write": "data.val() == auth.uid"
        },
        "subEntities":{
          ".indexOn":["dateAdded"]
        }
      }
    },
    "users": {
      ".read": "auth !== null",
      ".write": false,
      "$user_id": {
        ".write": "$user_id === auth.uid"
      }
    },
    "chats": {
      "$chats":{
        "messages":{
          ".indexOn": ["dateAdded"]
        }
      }
    },
    "topics": {
      "$topic": {
        "subEntities":{
          ".indexOn":["dateAdded"]
        }
      }
    }
  }
}
//// rules

{
  "rules": {
    ".read": "auth !== null",
    ".write": "auth !== null",
    "groups": {
      ".indexOn":["type"],
      "$group_id": {
        "owner": {
          ".write": "data.val() == auth.uid"
        },
        "subEntities":{
          ".indexOn":["dateAdded"]
        }
      }
    },
    "users": {
      ".read": "auth !== null",
      ".write": false,
      "$user_id": {
        ".write": "$user_id === auth.uid",
        "role": {
          ".indexOn":[".value"]
        }
      }
    },
    "chats": {
      "$chats":{
        "messages":{
          ".indexOn": ["dateAdded"]
        }
      }
    },
    "topics": {
      "$topic": {
        "subEntities":{
          ".indexOn":["dateAdded"]
        }
      }
    }
  }
}

//suggestions
//chats...
root.child("chats/"+$chat+"/entity/typeInDB").val()

//only members of entity can chat
root.child(root.child("chats/"+$chat+"/entity/typeInDB").val()).child("members"+auth.uid).exists()

//vote on question
{
  "rules": {
    "groups": {
      ".indexOn":["type"],
      "$group_id": {
        "owner": {
          ".write": "data.val() == auth.uid"
        },
        "subEntities":{
          ".indexOn":["dateAdded"]
        }
      }
    },
    "users": {
      ".read": "auth !== null",
      ".write": false,
      "$user_id": {
        ".write": "$user_id === auth.uid",
          "role": {
            ".indexOn":[".value"]
          }
      }
    },
    "chats": {
      "$chats":{
        "messages":{
          ".indexOn": ["dateAdded"]
        }
      }
    },
    "topics": {
      "$topic": {
        "subEntities":{
          ".indexOn":["dateAdded"]
        }
      }
    },
    "questions":{
      "$question":{
        ".write": "root.child('groups').child(root.child('questions/'+$question+'/parentEntityUid').val()).child('members/'+auth.uid).exists()"
      }
    }
  }
}

//
root
.child(root.child('questions/'+$question+'/parentEntityType').val())
.child(root.child('questions/'+$question+'/parentEntityUid').val())
.child('members/'+auth.uid)
.exists()

//testing limits...
{
  "rules": {
    "groups": {
      ".indexOn":["type"],
      "$group_id": {
        "owner": {
          ".write": "data.val() == auth.uid"
        },
        "subEntities":{
          ".indexOn":["dateAdded"]
        }
      }
    },
    "users": {
      ".read": "auth !== null",
      ".write": false,
      "$user_id": {
        ".write": "$user_id === auth.uid",
          "role": {
            ".indexOn":[".value"]
          }
      }
    },
    "chats": {
      "$chats":{
        "messages":{
          ".indexOn": ["dateAdded"]
        }
      }
    },
    "topics": {
      "$topic": {
        "subEntities":{
          ".indexOn":["dateAdded"]
        }
      }
    },
    "questions":{
      "$question":{
        ".write": "root.child('groups').child(root.child('questions/'+$question+'/parentEntityUid').val()).child('members/'+auth.uid).exists()"
      }
    }
  }
}
